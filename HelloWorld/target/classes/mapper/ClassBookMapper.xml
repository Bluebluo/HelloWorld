<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlo.dao.ClassBookMapper">
	<resultMap id="BaseResultMap" type="com.hlo.bean.ClassBook">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="class_id" jdbcType="INTEGER" property="classId" />
		<result column="section_id" jdbcType="INTEGER" property="sectionId" />
	</resultMap>
	<resultMap id="BookResultMap" type="com.hlo.bean.Book">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="author" jdbcType="VARCHAR" property="author" />
		<result column="publish" jdbcType="VARCHAR" property="publish" />
		<result column="introduce" jdbcType="VARCHAR" property="introduce" />
		<result column="photo" jdbcType="VARCHAR" property="photo" />
		<result column="price" jdbcType="REAL" property="price" />
		<result column="text" jdbcType="VARCHAR" property="text" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, type, book_id, class_id, section_id
	</sql>
	<sql id="Book_Column_List">
		id, name, author, publish, introduce, photo, price, text
	</sql>
	<select id="selectByExample" parameterType="com.hlo.bean.ClassBookExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_class_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectBook" parameterType="com.hlo.bean.ClassBookExample"
		resultMap="BookResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		a.id, a.name, a.author, a.publish, a.introduce, a.photo, a.price, a.text
		from t_book a left join t_class_book b on 
		a.id = b.book_id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<!--   and b.class_id = #{classId,jdbcType=INTEGER} 
		and b.type = #{type,jdbcType=INTEGER}-->
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_class_book
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_class_book
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hlo.bean.ClassBookExample">
		delete from t_class_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hlo.bean.ClassBook">
		insert into t_class_book (id, type, book_id,
		class_id, section_id)
		values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
		#{bookId,jdbcType=INTEGER},
		#{classId,jdbcType=INTEGER}, #{sectionId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hlo.bean.ClassBook">
		insert into t_class_book
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="bookId != null">
				book_id,
			</if>
			<if test="classId != null">
				class_id,
			</if>
			<if test="sectionId != null">
				section_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="bookId != null">
				#{bookId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
			<if test="sectionId != null">
				#{sectionId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hlo.bean.ClassBookExample"
		resultType="java.lang.Long">
		select count(*) from t_class_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_class_book
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.bookId != null">
				book_id = #{record.bookId,jdbcType=INTEGER},
			</if>
			<if test="record.classId != null">
				class_id = #{record.classId,jdbcType=INTEGER},
			</if>
			<if test="record.sectionId != null">
				section_id = #{record.sectionId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_class_book
		set id = #{record.id,jdbcType=INTEGER},
		type = #{record.type,jdbcType=INTEGER},
		book_id = #{record.bookId,jdbcType=INTEGER},
		class_id = #{record.classId,jdbcType=INTEGER},
		section_id = #{record.sectionId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hlo.bean.ClassBook">
		update t_class_book
		<set>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="bookId != null">
				book_id = #{bookId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				class_id = #{classId,jdbcType=INTEGER},
			</if>
			<if test="sectionId != null">
				section_id = #{sectionId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hlo.bean.ClassBook">
		update t_class_book
		set type = #{type,jdbcType=INTEGER},
		book_id = #{bookId,jdbcType=INTEGER},
		class_id = #{classId,jdbcType=INTEGER},
		section_id = #{sectionId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>